#include <string>
#include <vector>
#include <unordered_map>
#include <algorithm>

using namespace std;

vector<int> solution(vector<string> genres, vector<int> plays) {
    unordered_map<string, vector<pair<int, int>>> playlist;
    vector<int> answer;
    vector<vector<pair<int,int>>> calculrating;
    
    for (int i = 0; i < plays.size(); i++) {
        pair<int ,int> temp(i, plays[i]);
        playlist[genres[i]].push_back(temp);
    }

    for (auto x : playlist) {
        calculrating.push_back(x.second);
    }
    
    for (int i = 0; i < calculrating.size(); i++) {
        stable_sort(calculrating[i].begin(), calculrating[i].end(), [] (pair<int, int> x, pair<int, int> y) {
        return x.second > y.second;
    });
    }

    sort(calculrating.begin(), calculrating.end(), [] (vector<pair<int,int>> x, vector<pair<int,int>> y) {
        int sumX = 0;
        int sumY = 0;
        
        for (auto i : x) {
            sumX += i.second;
        }
        
        for (auto i : y) {
            sumY += i.second;
        }
        
        return sumX > sumY;
    });
    
    for (auto x : calculrating) {
        answer.push_back(x[0].first);
        if (x.size() != 1) answer.push_back(x[1].first);
    }
    
    return answer;
}
